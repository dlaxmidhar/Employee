@model RavenDbFinalTest.Models.Company

@{
    ViewData["Title"] = "Edit Employee";
}
<br />
<br />
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <br />
                <div class="card-header">
                    <h2 class="text-center">Edit Employee</h2>
                </div>
                <div class="d-flex justify-content-end mb-3">
                    <a class="btn btn-primary mx-3" asp-action="ListEmployee">Back to List</a>
                </div>
                <hr />
                <div class="card-body">
                    <form asp-action="EditEmployee">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="Id" />

                        <div class="form-group row">
                            <label asp-for="eid" class="col-md-4 col-form-label text-md-right" id="Employeeid">Employee ID</label>
                            <div class="col-md-6">
                                <input value="@ViewBag.eid" asp-for="eid" class="form-control" />
                                <span asp-validation-for="eid" id="errorId" class="text-danger"></span>
                            </div>
                        </div>
                        <br>
                        <div class="form-group row">
                            <label asp-for="Name" class="col-md-4 col-form-label text-md-right">Name</label>     <div class="col-md-6">
                                <input value="@ViewBag.Name" asp-for="Name" id="name" class="form-control" />
                                <span asp-validation-for="Name" id="NameError" class="text-danger"></span>
                            </div>
                        </div>
                        <br>
                        <div class="form-group row">
                            <label asp-for="role" class="col-md-4 col-form-label text-md-right" id="role">Role</label>  <div class="col-md-6">
                                <input value="@ViewBag.role" asp-for="role" id="role1" class="form-control" />
                                <span asp-validation-for="role" id="roleError1"  class="text-danger"></span>
                            </div>
                        </div>
                        <br>
                        <div class="form-group row">
                            <label asp-for="Phone" class="col-md-4 col-form-label text-md-right">Phone</label>  <div class="col-md-6">
                                <input type="number" value="@ViewBag.Phone" asp-for="Phone"id="phone" class="form-control" />
                                <span asp-validation-for="Phone" id="error" class="text-danger"></span>
                            </div>
                        </div>
                        <br>
                        <div class="form-group row">
                            <label asp-for="EmailId" class="col-md-4 col-form-label text-md-right">Email</label>  <div class="col-md-6">
                                <input type="email" value="@ViewBag.EmailId" asp-for="EmailId" id="email" class="form-control" />
                                <span asp-validation-for="EmailId"id="emailerror" class="text-danger"></span>
                            </div>
                        </div>
                        <br>
                        <div class="form-group text-center">
                            <button class="btn mx-2" style="background-color:#FF9201;" type="submit" id="update"><h style="color:whitesmoke;">Update</h></button>
                        </div>
                    </form>
                </div>


            </div>
        </div>
    </div>
</div>
<script>
    const phonenumber = document.getElementById('phone');
    const msg = document.getElementById('error');

    function validatePhoneNumber(phoneNumber) {
        const regex = /^([+][0-9]{2})?[6-9]\d{9}$/;
        if (!regex.test(phoneNumber)) {
            event.preventDefault();
            msg.innerText = "Invalid Phone Number";
        } else {
            msg.innerText = "";
        }
    }

    //Email validation
    const email = document.getElementById('email');
    const EmailError = document.getElementById('emailerror');

    function validateEmail(email) {
        const regex = /^\w+@@ceiamerica\.com$/;
        if (regex.test(email) == false) {
            event.preventDefault();
            EmailError.innerText = "Invalid Email Address";
        }
        else {
            EmailError.innerText = "";
        }
    }
    //Name Validation
    const Name = document.getElementById("name");
    const nameError = document.getElementById("NameError");

    function validateName(Name) {
        var nameregex = /^[a-zA-Z\s]{2,20}$/;
        if (nameregex.test(Name) == false) {
            event.preventDefault();
            nameError.innerText = "Please enter valid Name";

        }
        else {
            nameError.innerText = "";
        }
    }  

    //role
    const Role = document.getElementById("role1");
    const RoleError = document.getElementById("roleError1");

    function validateRole(event) {
        var roleregex = /^[a-zA-Z]+$/;
        var RoleValue = Role.value;

        if (roleregex.test(RoleValue) == false) {
            event.preventDefault();
            RoleError.innerText = "Enter only alphabetic characters";
        }
        else {
           
            RoleError.innerText = "";
        }
    }

    



    const createbtn = document.getElementById("update");
    createbtn.addEventListener("click", function () {
        validatePhoneNumber(phonenumber.value);
        validateEmail(email.value);
        validateName(Name.value);
        validateRole(event,Role.value);
      
       
        });

</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
